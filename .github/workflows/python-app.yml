name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        bash run_tests.bash

  safety:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - uses: pyupio/safety@2.3.4
      id: scan-1
      continue-on-error: true
      with:
        api-key: ${{secrets.SAFETY_API_KEY}}
        scan: 'env'
        
    - if: steps.scan-1.outcome != 'failure'
      run: echo 'Safety failed to run, but the next step in the pipeline continued.' && exit 1

  bandit-sast:
    runs-on: ubuntu-latest
    steps:
    - name: Run bandit SAST
      uses: mdegis/bandit-action@v1.0.1
      with:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        path: "."
        level: high
        confidence: high
        exit_zero: true
          
        
